<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.css">
    <link rel="stylesheet" href="/bower_components/angular-toastr/dist/angular-toastr.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  
  <body ng-app="SellVehicleModule" ng-controller="SellVehicleController" ng-cloak>

    <div class="container-fluid">

      <!-- Creates the navbar -->
        <nav class="navbar navbar-default navbar-inverse">
      
          <!-- This creates the mechanism for the collapse button -->
          <button type="button" class="navbar-toggle" data-toggle="collapse" ng-init="navCollapsed = true" ng-click="navCollapsed = !navCollapsed">
      
            <!-- This controls the number of lines in the image when the nav collapse -->
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>

          <!-- This is the brand on the left-hand side. -->
          <a class="navbar-brand" href="/#"> activityOverlordv2.0</a>
          <div class="collapse navbar-collapse" ng-class="!navCollapsed && 'in'">

          <!-- LOGIN FORM -->  
          <form ng-submit="submitLoginForm()" class="navbar-form navbar-right">

              <!-- E M A I L -->
              <div class="form-group">
                  <input ng-model="loginForm.email" type="text" placeholder="Email" name="email" class="form-control">
              </div>

              <!-- P A S S W O R D -->
              <div class="form-group">
                  <input ng-model="loginForm.password" type="password" placeholder="Password" name="password" class="form-control">
              </div>

              <!-- S U B M I T -->
              <button type="submit" class="btn btn-success">
                <span ng-show="!loginForm.loading">Sign in</span>
                <span ng-show="loginForm.loading" class="fa fa-spinner"></span>
                <span ng-show="loginForm.loading">Signing up...</span>
              </button>
              <input type="hidden" name="_csrf" value="<%= _csrf %>" />
          </form>
        </nav>
      </div>
    </div>
    <!-- SellVehicle FORM --> 
    <form ng-submit="submitSellVehicleForm()" id="SellVehicle-form" class="form-signin" name="sellvehicle">
        <h2 class="form-signin-heading">Sell Your Vehicle</h2>
    <!-- TODO correct the documentation -->
    <!-- Manufacturer -->

        <!-- checking whether the form "signup" with the "name" property is both $invalid AND $dirty.  If it is
        insert the "has-error" class on the input field (i.e. insert a red border around the input field)
        -->
        <div class="control-group form-group col-md-12"
        ng-class="{'has-error':sellvehicle.manufacturer.$invalid &&
                              sellvehicle.manufacturer.$dirty}">
          <label>Manufacturer</label>

          <!-- For this input field make it required, and have a max length of 25 -->
          <select class="form-control" ng-change="unitChanged()" ng-model="sellVehicleForm.manufacturerId">
            <option selected="selected">Select Manufacturer</option>
            <option ng-repeat="item in sellVehicleForm.manufacturer" ng-value="item.id">{{item.name}}</option>
          </select>
          <!-- Also, if signup.name.$dirty is true, show the message depending upon the particular properties truthiness (e.g. required
          and/or maxlength) -->
          <span class="help-block has-error" ng-if="sellvehicle.manufacturer.$dirty">
            <span ng-show="sellvehicle.manufacturer.$error.required">Manufacturer is required.</span>
            <span ng-show="sellvehicle.manufacturer.$error.maxlength">The name cannot be more than 50 characters.</span>
          </span>
        </div>




        <div class="control-group form-group col-md-12"
        ng-class="{'has-error':sellvehicle.model.$invalid &&
                              sellvehicle.model.$dirty}">
          <label>Model</label>

          <!-- For this input field make it required, and have a max length of 25 -->
          <select class="form-control" ng-model="sellVehicleForm.model">
            <option selected="selected">Select Model</option>
            <option ng-repeat="item in sellVehicleForm.modelnames" ng-value="item.id">{{item.name}}</option>
          </select>

          <!-- Also, if signup.name.$dirty is true, show the message depending upon the particular properties truthiness (e.g. required
          and/or maxlength) -->
          <span class="help-block has-error" ng-if="sellvehicle.model.$dirty">
            <span ng-show="sellvehicle.model.$error.required">Model is required.</span>
          </span>
        </div>



        <div class="control-group form-group col-md-12"
        ng-class="{'has-error':sellvehicle.bodyType.$invalid &&
                              sellvehicle.bodyType.$dirty}">
          <label>Body Type</label>

          <!-- For this input field make it required, and have a max length of 25 -->
          <select class="form-control" ng-model="sellVehicleForm.bodyTypeId">
            <option selected="selected">Select Body type</option>
            <option ng-repeat="item in sellVehicleForm.bodyType" ng-value="item.id">{{item.name}}</option>
          </select>

          <!-- Also, if signup.name.$dirty is true, show the message depending upon the particular properties truthiness (e.g. required
          and/or maxlength) -->
          <span class="help-block has-error" ng-if="sellvehicle.bodyType.$dirty">
            <span ng-show="sellvehicle.bodyType.$error.required">Body Type is required.</span>
          </span>
        </div>



        <div class="control-group form-group col-md-12"
        ng-class="{'has-error':sellvehicle.minPrice.$invalid &&
                              sellvehicle.minPrice.$dirty}">
          <label>Min Price</label>

          <!-- For this input field make it required, and have a max length of 25 -->
          <input type="text" class="form-control" placeholder="e.g. Nikola Tesla" name="minPrice" ng-model="sellVehicleForm.minPrice" ng-maxlength="50" required>

          <!-- Also, if signup.name.$dirty is true, show the message depending upon the particular properties truthiness (e.g. required
          and/or maxlength) -->
          <span class="help-block has-error" ng-if="sellvehicle.minPrice.$dirty">
            <span ng-show="sellvehicle.minPrice.$error.required">Name is required.</span>
            <span ng-show="sellvehicle.minPrice.$error.maxlength">The name cannot be more than 50 characters.</span>
          </span>
        </div>



        <div class="control-group form-group col-md-12"
        ng-class="{'has-error':sellvehicle.maxPrice.$invalid &&
                              sellvehicle.maxPrice.$dirty}">
          <label>Max Price</label>

          <!-- For this input field make it required, and have a max length of 25 -->
          <input type="text" class="form-control" placeholder="e.g. Nikola Tesla" name="maxPrice" ng-model="sellVehicleForm.maxPrice" ng-maxlength="50" required>

          <!-- Also, if signup.name.$dirty is true, show the message depending upon the particular properties truthiness (e.g. required
          and/or maxlength) -->
          <span class="help-block has-error" ng-if="sellvehicle.maxPrice.$dirty">
            <span ng-show="sellvehicle.maxPrice.$error.required">maxPrice is required.</span>
            <span ng-show="sellvehicle.maxPrice.$error.maxlength">The name cannot be more than 50 characters.</span>
          </span>
        </div>



        <div class="control-group form-group col-md-12"
        ng-class="{'has-error':sellvehicle.yearOfManufacture.$invalid &&
                              sellvehicle.yearOfManufacture.$dirty}">
          <label>Manufacture Year</label>

          <!-- For this input field make it required, and have a max length of 25 -->
          <input type="text" class="form-control" placeholder="e.g. Nikola Tesla" name="yearOfManufacture" ng-model="sellVehicleForm.yearOfManufacture" ng-maxlength="50" required>

          <!-- Also, if signup.name.$dirty is true, show the message depending upon the particular properties truthiness (e.g. required
          and/or maxlength) -->
          <span class="help-block has-error" ng-if="sellvehicle.yearOfManufacture.$dirty">
            <span ng-show="sellvehicle.yearOfManufacture.$error.required">yearOfManufacture is required.</span>
            <span ng-show="sellvehicle.yearOfManufacture.$error.maxlength">The name cannot be more than 50 characters.</span>
          </span>
        </div>

        <div class="control-group form-group col-md-12"
        ng-class="{'has-error':sellvehicle.city.$invalid &&
                              sellvehicle.city.$dirty}">
          <label>City</label>

          <!-- For this input field make it required, and have a max length of 25 -->
          <select class="form-control" ng-model="sellVehicleForm.cityId" name="city">
            <option selected="selected">Select City</option>
            <option ng-repeat="item in sellVehicleForm.city" ng-value="item.id">{{item.name}}</option>
          </select>

          <!-- Also, if signup.name.$dirty is true, show the message depending upon the particular properties truthiness (e.g. required
          and/or maxlength) -->
          <span class="help-block has-error" ng-if="sellvehicle.city.$dirty">
            <span ng-show="sellvehicle.city.$error.required">city is required.</span>
          </span>
        </div>

        <br/>

      <!-- Disable signup button until the form has no errors -->
      <button class="btn btn-primary btn-lg btn-block" type="submit" ng-disabled="sellvehicle.$invalid">
        <span ng-show="!sellVehicleForm.loading">Submit Vehicle</span>
      </button>

      <input type="hidden" name="_csrf" value="<%= _csrf %>" />

    </form>
      <!--SCRIPTS-->
      <script src="/js/dependencies/sails.io.js"></script>
      <script src="/bower_components/jquery/dist/jquery.js"></script>
      <script src="/bower_components/angular/angular.js"></script>
      <script src="/bower_components/angular-route/angular-route.js"></script>
      <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
      <script src="/bower_components/angular-bootstrap/ui-bootstrap.min.js"></script>
      <script src="/bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js"></script>
      <script src="/bower_components/angular-toastr/dist/angular-toastr.min.js"></script>
      <script src="/bower_components/angularjs-compare-to-directive/compareto.js"></script>
      <script src="/js/stickUp.min.js"></script>
      <script src="/js/public/signup/SignupModule.js"></script>
      <script src="/js/public/vehicle/SellVehicleModule.js"></script>
      <script src="/js/public/homepage/HomepageModule.js"></script>
      <script src="/js/public/homepage/HomepageController.js"></script>
      <script src="/js/public/signup/SignupController.js"></script>
      <script src="/js/public/vehicle/SellVehicleController.js"></script>
      <!--SCRIPTS END-->
  </body>
</html>